<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  	<groupId>com.github.alfresco.bug</groupId>
  	<artifactId>bug-alfresco-workflow-java-delegate-repo</artifactId>
  	<version>1.0.0-SNAPSHOT</version>
	<name>bug-alfresco-workflow-java-delegate-repo</name>
	<description>bug-alfresco-workflow-java-delegate-repo</description>
  
   <packaging>jar</packaging>
   
   
   <properties>
	<!-- Alfresco Maven Plugin version to use -->
	<alfresco.sdk.version>3.1.0</alfresco.sdk.version>

	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

	<!-- Alfresco Data directory, which will contain:
			Content Store (i.e. the files we upload)
			Database (i.e. the metadata for the uploaded files)
			Search index (i.e. the indexed content and metadata)
		 Configured in alfresco-global.properties with the 'dir.root' property.
			-->
	<alfresco.data.location>${session.executionRootDirectory}/alf_data_dev</alfresco.data.location>

	<!-- Duplicated with alfresco.solrHome in the plugin, we need them out here to do filtering -->
	<solr.home>${alfresco.data.location}/solr</solr.home>
	<solr.model.dir>${solr.home}/alfrescoModels</solr.model.dir>
	<solr.content.dir>${solr.home}/index</solr.content.dir>

	<!-- Properties used in dependency declarations, you don't need to change these -->
	<alfresco.groupId>org.alfresco</alfresco.groupId>

	<!-- Alfresco Platform webapp version, this is the original Alfresco webapp that will be
		customized and then deployed and run by the tomcat maven plugin when
		executing for example $ mvn clean install alfresco:run -->
	<alfresco.platform.version>5.2.g</alfresco.platform.version>
	<!-- Alfresco Share version, so we can bring in correct alfresco-share-services artifact -->
	<alfresco.share.version>5.2.f</alfresco.share.version>

	<!-- Default is to run with a Community edition, change to 'enterprise' if using Enterprise edition -->
	<maven.alfresco.edition>community</maven.alfresco.edition>


	<!-- JRebel Hot reloading of classpath stuff and web resource stuff -->
	<jrebel.version>1.1.6</jrebel.version>

	<!-- Environment to use, Alfresco Maven Plugin will
		 copy alfresco-global-*.properties files from this directory, such as src/test/properties/local -->
    <env>local</env>
	
	<maven.compiler.source>1.8</maven.compiler.source>
	<maven.compiler.target>1.8</maven.compiler.target>

	<alfresco.distribution.version>5.2.g</alfresco.distribution.version>
	<alfresco.core.version>6.13</alfresco.core.version>
	<alfresco.surf.version>6.11</alfresco.surf.version>
	<share.distribution.version>5.2.f</share.distribution.version>
	
	<spring.version>3.2.17.RELEASE</spring.version>
	<slf4j.version>1.7.21</slf4j.version>
	<surf.groupId>org.alfresco.surf</surf.groupId>
	<surf.version>6.11</surf.version><!-- 6.13 -->

	<logback.version>1.2.3</logback.version>
   
   </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.alfresco</groupId>
                <artifactId>alfresco-platform-distribution</artifactId>
                <version>${alfresco.distribution.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.alfresco</groupId>
                <artifactId>alfresco-remote-api</artifactId>
                <version>${alfresco.distribution.version}</version>
                <scope>provided</scope>
                <!-- exclude broken / irrelevant transitive dependencies -->
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.social</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.openoffice</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.artofsolving</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <!-- can mess with tests using a Servlet 3.0 container -->
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.alfresco</groupId>
                <artifactId>alfresco-repository</artifactId>
                <version>${alfresco.distribution.version}</version>
                <scope>provided</scope>
                <!-- exclude broken / irrelevant transitive dependencies -->
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.social</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.openoffice</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.artofsolving</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <!-- can mess with tests using a Servlet 3.0 container -->
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.alfresco</groupId>
                <artifactId>alfresco-core</artifactId>
                <version>${alfresco.core.version}</version>
                <scope>provided</scope>
                <!-- exclude broken / irrelevant transitive dependencies -->
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.social</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.alfresco</groupId>
                <artifactId>share</artifactId>
                <version>${share.distribution.version}</version>
                <classifier>classes</classifier>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>${surf.groupId}</groupId>
                <artifactId>spring-surf</artifactId>
                <version>${surf.version}</version>
                <scope>provided</scope>
                <!-- can mess with tests using a Servlet 3.0 container -->
                <exclusions>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>${surf.groupId}</groupId>
                <artifactId>spring-surf-api</artifactId>
                <version>${surf.version}</version>
                <scope>provided</scope>
                <!-- can mess with tests using a Servlet 3.0 container -->
                <exclusions>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Alfresco distribution POM does not define versions for following libraries -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>${surf.groupId}</groupId>
                <artifactId>spring-webscripts</artifactId>
                <version>${surf.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- prepare libraries for logging in local tests -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.alfresco</groupId>
                <artifactId>alfresco-repository</artifactId>
                <version>${alfresco.distribution.version}</version>
                <type>jar</type>
                <classifier>h2scripts</classifier>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>*</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>1.4.190</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>
	
    <dependencies>
    	<!-- ===================== -->
    	<!-- ALFRESCO DEPENDENCIES -->
    	<!-- ===================== -->
		<dependency>
			<groupId>${alfresco.groupId}</groupId>
			<artifactId>alfresco-repository</artifactId>
			<scope>provided</scope>
		</dependency>
        <dependency>
		    <groupId>org.alfresco</groupId>
		    <artifactId>alfresco-remote-api</artifactId>
		    <scope>provided</scope>	    	 
		</dependency>		
		<dependency>
		    <groupId>org.alfresco.surf</groupId>
		    <artifactId>spring-webscripts</artifactId>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.alfresco.surf</groupId>
		    <artifactId>spring-webscripts-api</artifactId>		    
		    <scope>provided</scope>
		</dependency>	
		<dependency>
			<groupId>${alfresco.groupId}</groupId>
			<artifactId>alfresco-data-model</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.myfaces.core</groupId>
			<artifactId>myfaces-api</artifactId>
			<scope>provided</scope>
		</dependency>
         <!-- Bring in Spring Context so we can use ApplicationContext, ApplicationContextAware etc -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>   
            <scope>provided</scope>        
        </dependency>
        <!-- Bring in Alfresco RAD so we get access to AlfrescoTestRunner classes -->
        <dependency>
            <groupId>org.alfresco.maven</groupId>
            <artifactId>alfresco-rad</artifactId>
            <version>${alfresco.sdk.version}</version>
            <scope>provided</scope>
        </dependency>
  	</dependencies>
  	
    <build>
        <plugins>
			<plugin>
				<groupId>org.alfresco.maven.plugin</groupId>
				<artifactId>alfresco-maven-plugin</artifactId>
				<version>${alfresco.sdk.version}</version>
				<executions>
					<execution>
						<id>start-alfresco</id>
						<goals>
							<goal>it</goal>
						</goals>
						<phase>pre-integration-test</phase>
					</execution>
				</executions>
				<configuration>
					<!-- We need the flat file H2 database to run the Repo -->
					<enableH2>true</enableH2>
					<!-- This is a platform extension JAR, so we need the platform webapp 
						(alfresco.war) -->
					<enablePlatform>true</enablePlatform>
					<!-- Enable Solr so we can use search, our Repo extension probably need 
						search -->
					<enableSolr>true</enableSolr>
					<!-- We don't need the share.war if we don't have any UI extensions -->
					<enableShare>false</enableShare>
					<!-- Enable the REST API Explorer -->
					<enableApiExplorer>true</enableApiExplorer>
		
					<!-- JARs and AMPs that should be overlayed/applied to the Platform/Repository 
						WAR (i.e. alfresco.war) -->
					<platformModules>
						<!-- This AMP is needed if we are going to access the platform webapp 
							from a Share webapp -->
						<!-- Share Services will be ignored if you are on Platform earlier than 
							5.1 -->
						<moduleDependency>
							<groupId>${alfresco.groupId}</groupId>
							<artifactId>alfresco-share-services</artifactId>
							<version>${alfresco.share.version}</version>
							<type>amp</type>
						</moduleDependency>
		
						<!-- Bring in this JAR project, need to be included here, otherwise resources 
							from META-INF will not be loaded, such as the test.html page -->
						<moduleDependency>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<version>${project.version}</version>
						</moduleDependency>
					</platformModules>
				</configuration>
			</plugin>
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-resources-plugin</artifactId>
			  <version>3.0.1</version>
			  <configuration>
				  <encoding>UTF-8</encoding>
				  <nonFilteredFileExtensions> <!-- jpg, jpeg, gif, bmp and png are added automatically -->
					  <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
					  <nonFilteredFileExtension>acp</nonFilteredFileExtension>
					  <nonFilteredFileExtension>svg</nonFilteredFileExtension>
					  <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
					  <nonFilteredFileExtension>doc</nonFilteredFileExtension>
					  <nonFilteredFileExtension>docx</nonFilteredFileExtension>
					  <nonFilteredFileExtension>xls</nonFilteredFileExtension>
					  <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
					  <nonFilteredFileExtension>ppt</nonFilteredFileExtension>
					  <nonFilteredFileExtension>pptx</nonFilteredFileExtension>
					  <nonFilteredFileExtension>bin</nonFilteredFileExtension>
					  <nonFilteredFileExtension>lic</nonFilteredFileExtension>
					  <nonFilteredFileExtension>swf</nonFilteredFileExtension>
					  <nonFilteredFileExtension>zip</nonFilteredFileExtension>
					  <nonFilteredFileExtension>msg</nonFilteredFileExtension>
					  <nonFilteredFileExtension>jar</nonFilteredFileExtension>
					  <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
					  <nonFilteredFileExtension>eot</nonFilteredFileExtension>
					  <nonFilteredFileExtension>woff</nonFilteredFileExtension>
					  <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
					  <nonFilteredFileExtension>css</nonFilteredFileExtension>
					  <nonFilteredFileExtension>ico</nonFilteredFileExtension>
					  <nonFilteredFileExtension>psd</nonFilteredFileExtension>
					  <nonFilteredFileExtension>js</nonFilteredFileExtension>
				  </nonFilteredFileExtensions>
			  </configuration>
			</plugin>	
			<!--
                Build an AMP if 3rd party libs are needed by the extensions
                JARs are the default artifact produced in your modules, if you want to build an amp for each module
                you have to enable this plugin and inspect the src/main/assembly.xml file if you want to customize
                the layout of your AMP. The end result is that Maven will produce both a JAR file and an AMP with your
                module.
            -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>build-amp-file</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptor>src/main/assembly/amp.xml</descriptor>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptor>src/main/assembly/amp.xml</descriptor>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.alfresco.maven.plugin</groupId>
						<artifactId>alfresco-maven-plugin</artifactId>
						<version>${alfresco.sdk.version}</version>
					</dependency>
				</dependencies>
		  </plugin>	

          <!-- Hot reloading with JRebel -->
          <plugin>
              <groupId>org.zeroturnaround</groupId>
              <artifactId>jrebel-maven-plugin</artifactId>
              <version>${jrebel.version}</version>
              <executions>
                  <execution>
                      <id>generate-rebel-xml</id>
                      <phase>process-resources</phase>
                      <goals>
                          <goal>generate</goal>
                      </goals>
                  </execution>
              </executions>
              <configuration>
                  <!-- For more information about how to configure JRebel plugin see:
                       http://manuals.zeroturnaround.com/jrebel/standalone/maven.html#maven-rebel-xml -->
                  <classpath>
                      <fallback>all</fallback>
                      <resources>
                          <resource>
                              <!--
                              Empty resource element marks default configuration. By
                              default it is placed first in generated configuration.
                              -->
                          </resource>
                      </resources>
                  </classpath>

                  <!--
                    alwaysGenerate - default is false
                    If 'false' - rebel.xml is generated if timestamps of pom.xml and the current rebel.xml file are not equal.
                    If 'true' - rebel.xml will always be generated
                  -->
                  <alwaysGenerate>true</alwaysGenerate>
              </configuration>
          </plugin>		  
		  
          <!-- Runs the integration tests, any class that follows naming convention
                 "**/IT*.java", "**/*IT.java", and "**/*ITCase.java" will be considered an integration test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify-test</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.19.1</version>
                    </dependency>
                </dependencies>
            </plugin>          
        </plugins>

		<resources>
		    <!-- Filter the resource files in this project and do property substitutions -->  
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
			<!-- Exclusion of files self-generated by Eclipse and Exclusion files that use markers similar to those used by maven  -->						 
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>${project.build.directory}</targetPath>
				<filtering>true</filtering>
				<excludes>					
					<exclude>**/*.jsfdia</exclude>
					<exclude>**/*.ftl</exclude>
					<exclude>**/*.jasper</exclude>
					<exclude>**/*.ks</exclude>
					<exclude>**/*.png</exclude>
					<exclude>**/*.jpg</exclude>
					<exclude>**/*.jpeg</exclude>
					<exclude>**/*.gif</exclude>
					<exclude>**/*.bmp</exclude>
					<exclude>**/*.acp</exclude>					
				</excludes>
			</resource>		
			<!-- Inclusion of resources that use markers similar to those used by maven putting the filtering to false, so the tags are not replaced -->			 		
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>${project.build.directory}</targetPath>
				<filtering>false</filtering>
				<includes>
					<include>**/*.ftl</include>
					<include>**/*.jasper</include>
					<include>**/*.ks</include>
					<include>**/*.png</include>
					<include>**/*.jpg</include>
					<include>**/*.jpeg</include>
					<include>**/*.gif</include>
					<include>**/*.bmp</include>
					<include>**/*.acp</include>
				</includes>
			</resource>
			
		</resources>
    </build>

    <!--
        Alfresco Maven Repositories
        -->
    <repositories>
        <repository>
            <id>alfresco-public</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
        </repository>
        <repository>
            <id>alfresco-public-snapshots</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </repository>
        <!-- Alfresco Enterprise Edition Artifacts, put username/pwd for server in settings.xml -->
        <repository>
            <id>alfresco-private-repository</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/private</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>alfresco-plugin-public</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
        </pluginRepository>
        <pluginRepository>
            <id>alfresco-plugin-public-snapshots</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>